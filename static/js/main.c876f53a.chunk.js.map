{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onSelect","useState","query","setQuery","selectedTodos","setSelectedTodos","filteredVisibleTodos","filter","todo","completed","getVisibleTodos","title","toLowerCase","includes","className","type","value","placeholder","onChange","event","target","map","readOnly","userId","onClick","id","API_URL","getTodos","a","fetch","response","json","getUser","CurrentUser","clear","currentUser","setUser","getUsersDetails","useCallback","usersDetails","useEffect","name","email","phone","App","selectedUserId","setTodos","getAllPosts","gotTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c876f53a.chunk.js","sourcesContent":["import React, { ChangeEvent, useState } from 'react';\nimport { Todo } from '../../react-app-env';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[],\n  onSelect: (id: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelect,\n}) => {\n  const [query, setQuery] = useState('');\n  const [selectedTodos, setSelectedTodos] = useState('');\n\n  const getVisibleTodos = () => {\n    switch (selectedTodos) {\n      case 'Active':\n        return todos.filter(todo => !todo.completed);\n      case 'Completed':\n        return todos.filter(todo => todo.completed);\n      default:\n        return todos;\n    }\n  };\n\n  const visibleTodos = getVisibleTodos();\n\n  const filteredVisibleTodos = visibleTodos.filter(todo => (\n    todo.title.toLowerCase().includes(query.toLowerCase())\n  ));\n\n  const onChangeInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const onChangeSelected = (event: ChangeEvent<HTMLSelectElement>) => {\n    setSelectedTodos(event.target.value);\n  };\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <div>\n        <label>\n          <input\n            type=\"text\"\n            value={query}\n            data-cy=\"filterByTitle\"\n            placeholder=\"Type search word\"\n            onChange={onChangeInput}\n          />\n        </label>\n\n        <select\n          className=\"TodoList__select\"\n          value={selectedTodos}\n          onChange={onChangeSelected}\n        >\n          <option value=\"All\">All</option>\n          <option value=\"Active\">Active</option>\n          <option value=\"Completed\">Completed</option>\n        </select>\n      </div>\n\n      <div className=\"TodoList__list-container\">\n        <ul\n          className=\"TodoList__list\"\n          data-cy=\"listOfTodos\"\n        >\n          {\n            filteredVisibleTodos.map(todo => (\n              <>\n                <li\n                  className={`\n                    TodoList__item\n                    ${todo.completed\n                ? 'TodoList__item--checked'\n                : 'TodoList__item--unchecked'\n              }`}\n                  key={todo.id}\n                >\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      readOnly\n                    />\n                    <p>{todo.title}</p>\n                  </label>\n                  {todo.userId && (\n                    <button\n                      type=\"button\"\n                      data-cy=\"userButton\"\n                      className={`TodoList__user-button\n                       ${todo.completed\n                        && 'TodoList__user-button--selected'}\n                        `}\n                      onClick={() => (\n                        onSelect(todo.userId)\n                      )}\n                    >\n                      {`User ${todo.userId}`}\n                    </button>\n                  )}\n                </li>\n              </>\n            ))\n          }\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import { Todo, User } from './react-app-env';\n\nconst API_URL = 'https://mate.academy/students-api';\n\nexport const getTodos = async (): Promise<Todo[]> => {\n  const response = await fetch(`${API_URL}/todos`);\n\n  return response.json();\n};\n\nexport const getUser = async (id: number): Promise<User> => {\n  const response = await fetch(`${API_URL}/users/${id}`);\n\n  return response.json();\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport './CurrentUser.scss';\nimport { User } from '../../react-app-env';\n\ntype Props = {\n  userId: number,\n  clear: (id: number) => void,\n};\n\nexport const CurrentUser: React.FC<Props> = ({ userId, clear }) => {\n  const [currentUser, setUser] = useState<User | null>(null);\n\n  const getUsersDetails = useCallback(async () => {\n    const usersDetails = await getUser(userId);\n\n    setUser(usersDetails);\n  }, [userId]);\n\n  useEffect(() => {\n    getUsersDetails();\n  }, [userId]);\n\n  return (\n    <>\n      { currentUser && (\n        <div className=\"CurrentUser\">\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              {`Selected user: ${currentUser.id}`}\n            </span>\n          </h2>\n          <h3\n            className=\"CurrentUser__name\"\n            data-cy=\"userName\"\n          >\n            {currentUser.name}\n          </h3>\n\n          <p className=\"CurrentUser__email\">\n            {currentUser.email}\n          </p>\n\n          <p className=\"CurrentUser__phone\">\n            {currentUser.phone}\n          </p>\n\n          <button\n            type=\"button\"\n            className=\"CurrentUser__button\"\n            onClick={() => clear(0)}\n          >\n            Clear\n          </button>\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\nimport { Todo } from './react-app-env';\n\nconst App: React.FC = () => {\n  const [\n    selectedUserId,\n    onSelect,\n  ] = useState(0);\n\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const getAllPosts = useCallback(\n    async () => {\n      const gotTodos = await getTodos();\n\n      setTodos(gotTodos);\n    }, [],\n  );\n\n  useEffect(() => {\n    getAllPosts();\n  }, []);\n\n  const clear = (userId: number) => {\n    onSelect(userId);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          todos={todos}\n          onSelect={onSelect}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser\n              userId={selectedUserId}\n              clear={clear}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}